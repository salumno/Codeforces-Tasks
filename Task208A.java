/*
Вася работает диджеем в самом лучшем ночном клубе Берляндии, и часто в своих выступлениях он использует музыку в стиле «дабстеп». Недавно он решил взять несколько старых песен и сделать из них дабстеп-ремиксы.

Пусть песня состоит из некоторого количества слов. Для того, чтобы сделать дабстеп-ремикс этой песни, Вася вставляет некоторое количество слов «WUB» до первого слова песни (возможно нулевое количество), после последнего слова (возможно нулевое количество) и между словами (между любой парой соседних слов песни хотя бы одно слово «WUB»), а затем склеивает все слова, включая «WUB», в одну строку и проигрывает в клубе.

Например, из песни со словами «I AM X» может получиться дабстеп-ремикс «WUBWUBIWUBAMWUBWUBX» и не может получиться дабстеп-ремикс «WUBWUBIAMWUBX».

Недавно Петя услышал новую дабстеп-композицию Васи, но так как он не очень любит современную музыку, то решил понять, из какой же песни Вася сделал свой ремикс. Помогите Пете восстановить оригинал.

Входные данные
Входные данные состоят из единственной непустой строки, состоящей только из заглавных латинских букв, длиной не более 200 символов. Гарантируется, что до создания ремикса ни одно слово не содержало в себе подстроку «WUB», и Вася не менял их порядок. Также гарантируется, что изначально в песне было не менее одного слова.

Выходные данные
Выведите слова песни, которую Вася использовал для создания дабстеп-ремикса. Слова при выводе разделяйте пробелом.

Примеры
входные данные
WUBWUBABCWUB
выходные данные
ABC 
входные данные
WUBWEWUBAREWUBWUBTHEWUBCHAMPIONSWUBMYWUBFRIENDWUB
выходные данные
WE ARE THE CHAMPIONS MY FRIEND 
Примечание
В первом примере: «WUBWUBABCWUB» = «WUB» + «WUB» + «ABC» + «WUB». Значит, в оригинале песня состоит из одного слова «ABC», так как все слова «WUB» добавил Вася.

Во втором примере между всеми соседними словами, а также в начало и в конец, Вася добавил по одному слову «WUB», кроме как между словами «ARE» и «THE» — между ними Вася добавил два «WUB».
*/

import java.util.Scanner;

public class Task208A {
	public static void main (String[] args) {
		Scanner sc = new Scanner(System.in);
		String str = sc.nextLine();
		str = str.concat(".");
		char[] lyrics = str.toCharArray();
		int i = 0;
		while (i < lyrics.length - 2) {
			if (lyrics[i] == 'W' && lyrics[i+1] == 'U' && lyrics[i+2] == 'B') {			
				lyrics[i] = '_';
				lyrics[i+1] = '_';
				lyrics[i+2] = '_';
				i += 3;
			} else {
				i++;
			}
		}
		for (int j = 0; j < lyrics.length-1; j++) {
			if (lyrics[j] != '_' ) {
				if (lyrics[j+1] == '_') {
					System.out.print(lyrics[j] + " ");
				} else {
					System.out.print(lyrics[j]);
				}
			}
		}
	}
}
