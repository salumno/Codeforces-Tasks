/*
В стране Бялечинск начались выборы президента, в которых участвуют n кандидатов. Страна состоит из m городов. Известно, сколько человек в каждом городе проголосовало за каждого кандидата.

Система выборов в стране имеет необычный вид. На первом этапе выборов подводятся итоги голосованя по городам: считается, что в городе победил тот кандидат, за которого было отдано наибольшее количество голосов в этом городе, а в случае, если несколько кандидатов набрали максимальное количество голосов — кандидат с наименьшим номером из них.

На втором этапе выборов по тому же принципу определяется победитель: победителем выборов считается кандидат, за которого проголосовало максимальное количество городов, а среди набравших максимальное количество голосов — кандидат с наименьшим номером.

Определите, кто победит на выборах?

Входные данные
Первая строка входных данных содержит два целых числа n, m (1 ≤ n, m ≤ 100) — количество кандидатов и городов соответственно.

В последующих m строках записано по n целых неотрицательных чисел, j-е число в i-й строке aij (1 ≤ j ≤ n, 1 ≤ i ≤ m, 0 ≤ aij ≤ 10^9) обозначает количество голосов за кандидата номер j в городе номер i.

Гарантируется что суммарное количество жителей во всех городах не превосходит 10^9.

Выходные данные
Выведите единственное число — номер кандидата, победившего в выборах. Кандидаты нумеруются с единицы.

Примеры
входные данные
3 3
1 2 3
2 3 1
1 2 1
выходные данные
2
входные данные
3 4
10 10 3
5 1 6
2 2 2
1 5 7
выходные данные
1
*/

import java.util.Scanner;

public class Task570A {

	public static void main (String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int m = sc.nextInt();
		int[] point = new int[n];
		int imax = 0;
		for (int i = 0; i < m; i++) {
			int max = Integer.MIN_VALUE;
			for (int j = 0; j < n; j++) {
				int p = sc.nextInt();
				if (p > max) {
					max = p;
					imax = j;
				}
			}
			point[imax]++;
		} 
		imax = 0;
		for (int i = 1; i < n; i++) {
			if (point[i] > point[imax]) {
				imax = i;
			}
		}
		System.out.println(imax+1);
	}
}
