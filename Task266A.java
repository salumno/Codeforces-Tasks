/*
На столе в ряд выложены n камней, каждый из которых может быть красного, зеленого или синего цвета. Посчитайте, какое минимальное количество камней нужно убрать со стола, чтобы любые два соседних камня имели разные цвета. Камни в ряду считаются соседними, если между ними нет других камней.

Входные данные
В первой строке задано целое число n (1 ≤ n ≤ 50) — количество камней на столе.

В следующей строке задана строка s, обозначающая цвета камней. Будем считать, что камни в ряду пронумерованы целыми числами от 1 до n слева направо. Тогда i-ый символ s равен «R», если i-ый камень красного цвета, «G» — если он зеленого цвета, и «B» — если он синего цвета.

Выходные данные
Выведите единственное целое число — ответ на задачу.

Примеры
входные данные
3
RRG
выходные данные
1
входные данные
5
RRRRR
выходные данные
4
входные данные
4
BRBG
выходные данные
0
*/

import java.util.Scanner;

public class Task266A {

	public static void main (String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		sc.nextLine();
		String str = sc.nextLine();
		int counter = 0;
		char[] letters = str.toCharArray();
		for (int i = 0; i < letters.length-1; i++) {
			if (letters[i] == letters[i+1]) {
				counter++;
			}
		}
		System.out.println(counter);
	}
}
