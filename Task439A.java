/*
Деву — известный исполнитель классической музыки. Его приглашают на многие большие фестивали и мероприятия. Недавно его пригласили на «всемирный фестиваль классического пения». Кроме Деву пригласили и комика Чуру.

Деву предоставил организаторам список песен и список времен, необходимых для их исполнения. Всего он будет петь n песен, i-я песня займет ровно ti минут. Комик Чуру будет рассказывать шутки. Все его шутки длятся ровно по пять минут.

Большинство людей придут на фестиваль послушать Деву. К сожалению, Деву требуется 10-минутный перерыв для отдыха после каждой песни. К счастью, Чуру может рассказывать шутки, не отдыхая.

Вы, как один из организаторов, должны составить оптимальное расписание для меропрития. По некоторым причинам надо соблюдать следующие условия:

продолжительность мероприятия не должна превышать d минут;
Деву должен спеть полностью все свои песни, при этом количество рассказанных Чуру шуток должно быть как можно больше.
Если невозможно найти способ спланировать мероприятие, чтобы Деву спел все свои песни, выведите -1. В противном случае, выведите максимальное количество шуток, которые Чуру сможет рассказать на мероприятии.

Входные данные
В первой строке записано два целых числа через пробел — n, d (1 ≤ n ≤ 100; 1 ≤ d ≤ 10000). Во второй строке записано n целых чисел через пробел: t1, t2, ..., tn (1 ≤ ti ≤ 100).

Выходные данные
Если невозможно найти способ спланировать мероприятие, чтобы Деву спел все свои песни, выведите -1. В противном случае выведите максимальное количество шуток, которые Чуру сможет рассказать на мероприятии.

Примеры
входные данные
3 30
2 2 1
выходные данные
5
входные данные
3 20
2 1 1
выходные данные
-1
*/

import java.util.Scanner;

public class Task439A {

	public static void bubbleSort (int[] arr) {
		for (int i = 0; i < arr.length - 1; i++) {
			boolean swapped = true;
			for (int j = 0; j < arr.length - i - 1; j++) {
				if (arr[i] > arr[i+1]) {
					int temp = arr[i];
					arr[i] = arr[i+1];
					arr[i+1] = temp;
					swapped = false;
				}
			}
			if (swapped) {
				break;
			}
		}
	}

	public static void main (String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int d = sc.nextInt();
		int sum = 0;
		int[] song = new int[n];
		for (int i = 0; i < song.length; i++) {
			song[i] = sc.nextInt();
		}
		bubbleSort(song);
		boolean flag = true;
		int counter = 0;
		for (int i = 0; i < song.length; i++) {
			sum += song[i];
			if (sum > d) {
				flag = false;
				break;
			}
			int k = 0;
			while (k < 2) {
				if (sum + 5 <= d) {
				counter += 1;
				}
				sum += 5;
				k++;
			}
		}
		if (flag) {
			if (sum < d) {
				counter += (d - sum) / 5;
			}
			System.out.println(counter);
		} else {
			System.out.println("-1");
		}
	}
}
