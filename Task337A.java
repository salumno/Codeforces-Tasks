/*
Учебный год подходит к концу, и классной руководительнице Манане Тариеловне скоро придется прощаться с очередным классом. На прощанье учительница решила подарить каждому из своих n учеников «пазл» (согласно wikipedia, пазл — игра-головоломка, в которой требуется составить мозаику из множества фрагментов рисунка различной формы).

В магазине учительнице сказали, что у них есть m пазлов, но они возможно не все одинаковой сложности и размера. Конкретно, первый пазл состоял из f1 фрагментов, второй — из f2, и так далее.

Манана Тариеловна решила, что разница между количествами фрагментов в подаренных ею пазлах должна быть как можно меньше, иначе дети могут обидеться. Поэтому она хочет выбрать такие n пазлов, что если A — это количество фрагментов в самом большом, а B — количество фрагментов в самом маленьком из них, то A - B должно быть минимальным возможным. Помогите учительнице и найдите наименьшую возможную разницу A - B.

Входные данные
В первой строке через пробел записаны целые числа n и m (2 ≤ n ≤ m ≤ 50). Во второй строке через пробел записано m целых чисел f1, f2, ..., fm (4 ≤ fi ≤ 1000) — количества фрагментов в пазлах, продающихся в магазине.

Выходные данные
Выведите единственное целое число — минимальную возможную разницу между максимальным и минимальным количеством фрагментов среди пазлов, которые должна приобрести учительница.

Примеры
входные данные
4 6
10 12 10 7 5 22
выходные данные
5
Примечание
Пример 1. В классе всего 4 ученика. В магазине продается 6 пазлов. Если Манана Тариеловна купит первые четыре пазла, которые состоят из 10, 12, 10 и 7 фрагментов соответственно, тогда разница между самым большим и самым маленьким будет равна 5-ти. Меньшую разницу получить невозможно. Заметим, что учительница может купить пазлы 1, 3, 4 и 5 и также получить разницу 5.
*/

import java.util.Scanner;

public class Task337A {
	public static void main (String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int m = sc.nextInt();
		int[] num = new int[m];
		for (int i = 0; i < m; i++) {
			num[i] = sc.nextInt();
		}
		for (int i = 0; i < num.length - 1; i++) {
			boolean swapped = true;
			for (int j = 0; j < num.length - 1 - i; j++) {
				if (num[j] > num[j+1]) {
					int temp = num[j];
					num[j] = num[j+1];
					num[j+1] = temp;
					swapped = false;
				}
			}
			if (swapped) {
				break;
			}
		}
		int min = 1001;
		for (int i = 0; i < num.length - n + 1; i++) {
			if (num[i+n-1] - num[i] < min) {
				min = num[i+n-1] - num[i];
			}
		}
		System.out.println(min);
	}
}
