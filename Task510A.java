/*
Лиса Ciel учится программировать. Одним из её первых заданий было нарисовать лису! Однако для неё это показалось слишком сложным, так что вместо лисы она решила нарисовать змейку.

Змейка — это узор в прямоугольной таблице из n строк по m столбцов. Обозначим c-ю ячейку r-й строки как (r, c). Хвост змеи располагается в ячейке (1, 1), а её туловище простирается до (1, m), затем спускается на 2 ряда вниз до (3, m), затем простирается влево до (3, 1), и так далее. Таким образом, голова змеи расположена в одном из углов n-й строки.

Ваша задача — изобразить такую змею для лисы Ciel: пустые ячейки должны быть обозначены точками ('.'), а ячейки, накрытые телом змеи, должны быть заполнены решетками ('#').

Для полного понимания требуемого узора обратите внимание на примеры выходных данных.

Входные данные
В единственной строке записано два целых числа: n и m (3 ≤ n, m ≤ 50).

n — нечетное число.

Выходные данные
Выведите n строк. В каждой строке должна быть записана последовательность из m символов. Не выводите пробелы.

Примеры
входные данные
3 3
выходные данные
###
..#
###
входные данные
3 4
выходные данные
####
...#
####
входные данные
5 3
выходные данные
###
..#
###
#..
###
входные данные
9 9
выходные данные
#########
........#
#########
#........
#########
........#
#########
#........
#########
*/

import java.util.Scanner;

public class Task510A {
	public static void main (String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int m = sc.nextInt();
		char[][] snake = new char[n][m];
		int k = m-1;
		for (int i = 0; i < n; i++) {
			if (i % 2 == 0) {
				for (int j = 0; j < m; j++) {
					snake[i][j] = '#';
				}
			} else {
				for (int j = 1; j < m-1; j++) {
					snake[i][j] = '.';
				}
				if (k == m-1) {
					snake[i][k] = '#';
					snake[i][0] = '.';
					k = 0;
				} else {
					snake[i][k] = '#';
					snake[i][m-1] = '.';
					k = m-1;
				}
			}			
		}
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				System.out.print(snake[i][j]);
			}
			System.out.println();
		}
	}
}
